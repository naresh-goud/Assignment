{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NARESHKUMAR\\\\Documents\\\\GitHub\\\\SoluLab_Assignment\\\\src\\\\components\\\\Messages\\\\components\\\\Messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useCallback, useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport useSound from \"use-sound\";\nimport config from \"../../../config\";\nimport LatestMessagesContext from \"../../../contexts/LatestMessages/LatestMessages\";\nimport Initial_Botty_Message from \"../../../common/constants/initialBottyMessage\";\nimport TypingMessage from \"./TypingMessage\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Message from \"./Message\";\nimport \"../styles/_messages.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ME = \"me\";\nconst BOT = \"bot\";\nconst Initial_Message = {\n  message: Initial_Botty_Message,\n  id: Date.now(),\n  user: BOT\n};\nconst socket = io(config.BOT_SERVER_ENDPOINT, {\n  transports: [\"websocket\", \"polling\", \"flashsocket\"]\n});\n\nfunction scrollToTheBottomOfMessages() {\n  const list = document.getElementById(\"message-list\");\n  list.scrollTo({\n    top: list.scrollHeight,\n    behavior: \"smooth\"\n  });\n}\n\nfunction Messages() {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([Initial_Message]);\n  const [botTyping, setBotTyping] = useState(false);\n  const [playSend] = useSound(config.SEND_AUDIO_URL);\n  const [playReceive] = useSound(config.RECEIVE_AUDIO_URL);\n  const {\n    setLatestMessage\n  } = useContext(LatestMessagesContext);\n  useEffect(() => {\n    socket.off(\"bot-message\");\n    socket.on(\"bot-message\", message => {\n      setBotTyping(false);\n      setMessages([...messages, {\n        message,\n        user: BOT,\n        id: Date.now()\n      }]);\n      setLatestMessage(BOT, message);\n      playReceive();\n      scrollToTheBottomOfMessages();\n    });\n  }, [messages]);\n  useEffect(() => {\n    document.getElementById(\"user-message-input\").focus();\n    socket.on(\"bot-typing\", () => {\n      setBotTyping(true);\n      scrollToTheBottomOfMessages();\n    });\n  }, []);\n  const sendMessage = useCallback(() => {\n    if (!message) {\n      return;\n    }\n\n    setMessages([...messages, {\n      message,\n      user: ME,\n      id: Date.now()\n    }]);\n    playSend();\n    scrollToTheBottomOfMessages();\n    socket.emit(\"user-message\", message);\n    setMessage(\"\");\n    document.getElementById(\"user-message-input\").value = \"\";\n  }, [messages, message]);\n\n  const onChangeMessage = _ref => {\n    let {\n      target: {\n        value\n      }\n    } = _ref;\n    setMessage(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages__list\",\n      id: \"message-list\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n        message: message,\n        nextMessage: messages[index + 1],\n        botTyping: botTyping\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)), botTyping ? /*#__PURE__*/_jsxDEV(TypingMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 22\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      message: message,\n      sendMessage: sendMessage,\n      onChangeMessage: onChangeMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Messages, \"6XB/Mpm9tNTayoCrYfv4nKumgYM=\", false, function () {\n  return [useSound, useSound];\n});\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["C:/Users/NARESHKUMAR/Documents/GitHub/SoluLab_Assignment/src/components/Messages/components/Messages.js"],"names":["React","useContext","useCallback","useEffect","useState","io","useSound","config","LatestMessagesContext","Initial_Botty_Message","TypingMessage","Header","Footer","Message","ME","BOT","Initial_Message","message","id","Date","now","user","socket","BOT_SERVER_ENDPOINT","transports","scrollToTheBottomOfMessages","list","document","getElementById","scrollTo","top","scrollHeight","behavior","Messages","setMessage","messages","setMessages","botTyping","setBotTyping","playSend","SEND_AUDIO_URL","playReceive","RECEIVE_AUDIO_URL","setLatestMessage","off","on","focus","sendMessage","emit","value","onChangeMessage","target","map","index"],"mappings":"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","sourcesContent":["import React, { useContext, useCallback, useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport useSound from \"use-sound\";\nimport config from \"../../../config\";\nimport LatestMessagesContext from \"../../../contexts/LatestMessages/LatestMessages\";\nimport Initial_Botty_Message from \"../../../common/constants/initialBottyMessage\";\nimport TypingMessage from \"./TypingMessage\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Message from \"./Message\";\nimport \"../styles/_messages.scss\";\n\nconst ME = \"me\";\nconst BOT = \"bot\";\nconst Initial_Message = {\n  message: Initial_Botty_Message,\n  id: Date.now(),\n  user: BOT,\n};\n\nconst socket = io(config.BOT_SERVER_ENDPOINT, {\n  transports: [\"websocket\", \"polling\", \"flashsocket\"],\n});\n\nfunction scrollToTheBottomOfMessages() {\n  const list = document.getElementById(\"message-list\");\n\n  list.scrollTo({ top: list.scrollHeight, behavior: \"smooth\" });\n}\n\nfunction Messages() {\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([Initial_Message]);\n  const [botTyping, setBotTyping] = useState(false);\n  const [playSend] = useSound(config.SEND_AUDIO_URL);\n  const [playReceive] = useSound(config.RECEIVE_AUDIO_URL);\n  const { setLatestMessage } = useContext(LatestMessagesContext);\n\n  useEffect(() => {\n    socket.off(\"bot-message\");\n    socket.on(\"bot-message\", (message) => {\n      setBotTyping(false);\n\n      setMessages([...messages, { message, user: BOT, id: Date.now() }]);\n\n      setLatestMessage(BOT, message);\n\n      playReceive();\n\n      scrollToTheBottomOfMessages();\n    });\n  }, [messages]);\n\n  useEffect(() => {\n    document.getElementById(\"user-message-input\").focus();\n\n    socket.on(\"bot-typing\", () => {\n      setBotTyping(true);\n\n      scrollToTheBottomOfMessages();\n    });\n  }, []);\n\n  const sendMessage = useCallback(() => {\n    if (!message) {\n      return;\n    }\n\n    setMessages([...messages, { message, user: ME, id: Date.now() }]);\n\n    playSend();\n\n    scrollToTheBottomOfMessages();\n\n    socket.emit(\"user-message\", message);\n\n    setMessage(\"\");\n\n    document.getElementById(\"user-message-input\").value = \"\";\n  }, [messages, message]);\n\n  const onChangeMessage = ({ target: { value } }) => {\n    setMessage(value);\n  };\n\n  return (\n    <div className=\"messages\">\n      <Header />\n      <div className=\"messages__list\" id=\"message-list\">\n        {messages.map((message, index) => (\n          <Message\n            message={message}\n            nextMessage={messages[index + 1]}\n            botTyping={botTyping}\n          />\n        ))}\n        {botTyping ? <TypingMessage /> : null}\n      </div>\n      <Footer\n        message={message}\n        sendMessage={sendMessage}\n        onChangeMessage={onChangeMessage}\n      />\n    </div>\n  );\n}\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}